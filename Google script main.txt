function doGet(e){
  var action       = e.parameter.action;
  var sh;
  if (action == 'add'){
      sh = e.parameter.sh;
      if (sh==1) return add_employee(e);
      if (sh==2) return add_employer(e);
  }else if(action == 'search'){
    sh = e.parameter.sh;
    if (sh==1) return search_employee(e);
    if (sh==2) return search_employer(e);
  }else if (action == 'get_last_ids'){
    return last_ids();
  }else if (action=='delete'){
    return delete_check(e);
  }
}


function YesNo(s){
  if (s == 'Yes'){
    return 1;
  }else if (s == 'No'){
    return 0;
  }else if (s == 1){
    return 'Yes';
  }else if (s == 0){
    return 'No';
  }else if (s == '@notused@'){
    return '*';
  }
}

function delete_check(e){
  var check_id = e.parameter.params;
  var sh = check_id.substring(0,1);
  var id = check_id.substring(2,check_id.length);
  var sheet;
  if (sh==1){
    sheet = get_db().getSheetByName('Employees');
  }else if(sh==2){
    sheet = get_db().getSheetByName('Employers');
  }
  id++;
  sheet.deleteRow(id);
  return ContentService.createTextOutput(JSON.stringify('row #'+id+' deleted')).setMimeType(ContentService.MimeType.JSON);
}

function date_to_dot_date(value){
  var date = Utilities.formatDate(new Date(value), 'GMT-6', 'MM/dd/yyyy');
  return date;
}

function search_employer(e){
  var data = e.parameter.params;
  var values = [];
      values = data.split(';');
  var name = values[0];
  var phone = values[1];
  var contract = YesNo(values[2]);
  var sheet = get_db().getSheetByName('Employers');
  var sheet_lr = sheet.getLastRow();
  var max_rows = sheet_lr - 1;
  var data = sheet.getRange(1,1,sheet_lr,17).getValues();//(row, column, numRows, numColumns);
  //Logger.log(name+phone+contract+'/'+data[1][0]+data[1][5]+data[1][8]);
  //Logger.log(data);
  var row = 0, result = [], i = 0;
  while (row <= max_rows){
    //if all empty - show all
    if (name == '' && phone == '' && values[2] == 0){
    //==================================
      if (row == 0){
        result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],data[row][6],data[row][7],data[row][8],
                     data[row][9],data[row][10],data[row][11],data[row][12],
                     data[row][13],data[row][14],data[row][15],data[row][16],row];
      }else{
        //Logger.log(data[row][6]);
        result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],date_to_dot_date(data[row][6]),data[row][7],YesNo(data[row][8]),
                     YesNo(data[row][9]),YesNo(data[row][10]),YesNo(data[row][11]),YesNo(data[row][12]),
                     YesNo(data[row][13]),YesNo(data[row][14]),YesNo(data[row][15]),YesNo(data[row][16]),row];
      }
      i++;
    //if name = empty & phone empty & values 1
    }else if (name == '' && phone == '' && values[2] == 1){
    //==================================
      if((data[row][8] == contract) || row == 0){
        if (row == 0){
          result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],data[row][6],data[row][7],data[row][8],
                       data[row][9],data[row][10],data[row][11],data[row][12],
                       data[row][13],data[row][14],data[row][15],data[row][16],row];
        }else{
          //Logger.log(data[row][6]);
          result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],date_to_dot_date(data[row][6]),data[row][7],YesNo(data[row][8]),
                       YesNo(data[row][9]),YesNo(data[row][10]),YesNo(data[row][11]),YesNo(data[row][12]),
                       YesNo(data[row][13]),YesNo(data[row][14]),YesNo(data[row][15]),YesNo(data[row][16]),row];
        }
        i++;
      }
    //if name = not empty & phone empty - show all with name
    }else if (name != '' && phone == ''){
    //==================================
      if((data[row][0] == name && data[row][8] == contract) || row == 0){
        if (row == 0){
          result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],data[row][6],data[row][7],data[row][8],
                       data[row][9],data[row][10],data[row][11],data[row][12],
                       data[row][13],data[row][14],data[row][15],data[row][16],row];
        }else{
          //Logger.log(data[row][6]);
          result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],date_to_dot_date(data[row][6]),data[row][7],YesNo(data[row][8]),
                       YesNo(data[row][9]),YesNo(data[row][10]),YesNo(data[row][11]),YesNo(data[row][12]),
                       YesNo(data[row][13]),YesNo(data[row][14]),YesNo(data[row][15]),YesNo(data[row][16]),row];
        }
        i++;
      }
    }
    //if name = empty & phone not empty - show all names with that phone
    else if (name == '' && phone != ''){
    //==================================
      if((data[row][5] == phone && data[row][8] == contract) || row == 0){
        if (row == 0){
          result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],data[row][6],data[row][7],data[row][8],
                       data[row][9],data[row][10],data[row][11],data[row][12],
                       data[row][13],data[row][14],data[row][15],data[row][16],row];
        }else{
          //Logger.log(data[row][6]);
          result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],date_to_dot_date(data[row][6]),data[row][7],YesNo(data[row][8]),
                       YesNo(data[row][9]),YesNo(data[row][10]),YesNo(data[row][11]),YesNo(data[row][12]),
                       YesNo(data[row][13]),YesNo(data[row][14]),YesNo(data[row][15]),YesNo(data[row][16]),row];
        }
        i++;
      }
    }
    //ELSE
    else{
    //==================================
      if((data[row][0] == name && data[row][5] == phone && data[row][8] == contract) || row == 0){
        if (row == 0){
          result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],data[row][6],data[row][7],data[row][8],
                       data[row][9],data[row][10],data[row][11],data[row][12],
                       data[row][13],data[row][14],data[row][15],data[row][16],row];
        }else{
          //Logger.log(data[row][6]);
          result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],date_to_dot_date(data[row][6]),data[row][7],YesNo(data[row][8]),
                       YesNo(data[row][9]),YesNo(data[row][10]),YesNo(data[row][11]),YesNo(data[row][12]),
                       YesNo(data[row][13]),YesNo(data[row][14]),YesNo(data[row][15]),YesNo(data[row][16]),row];
        }
        i++;
      }
    }

    row++;
  }
  if (i==1) return ContentService.createTextOutput(JSON.stringify('not found')).setMimeType(ContentService.MimeType.JSON);
  return ContentService.createTextOutput(JSON.stringify(result)).setMimeType(ContentService.MimeType.JSON);
}


function employee_check(search_value, sheet_value){
  Logger.log(search_value+'=?='+ sheet_value);
  if (search_value == '@notused@' || search_value == sheet_value || search_value == '' || search_value == '*') return true;
  Logger.log(false);
  return false;
}

function search_employee(e){
  var data = e.parameter.params;
  var values = [];
      values = data.split(';');
  var name = values[0];
  var phone = values[1];
  var available = YesNo(values[2]);
  var living = YesNo(values[3]);
  var full_time = YesNo(values[4]);
  var part_time = YesNo(values[5]);
  var night = YesNo(values[6]);
  var car = YesNo(values[7]);
  var drivers_license = YesNo(values[8]);
  var english = YesNo(values[9]);
  var zk = YesNo(values[10]);
  var sheet = get_db().getSheetByName('Employees');
  var sheet_lr = sheet.getLastRow();
  var max_rows = sheet_lr - 1;
  var data = sheet.getRange(1,1,sheet_lr,16).getValues();//(row, column, numRows, numColumns);
  var row = 0, result = [], i = 1;
  result[0] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],data[row][6],data[row][7],data[row][8],
                       data[row][9],data[row][10],data[row][11],data[row][12],
                       data[row][13],data[row][14],data[row][15],row];
  row++;
  //Logger.log(values);
  //Logger.log(values[2]);
  //Logger.log(available);
  //Logger.log(english);
  while (row <= max_rows){
    
    //Logger.log(data[row]);
    //if all empty - show all
    /*if (name == '' &&
        phone == '' &&
        values[2] == 0 &&
        values[3] == 0 &&
        values[4] == 0 &&
        values[5] == 0 && 
        values[6] == 0 &&
        values[7] == 0 &&
        values[8] == 0 &&
        values[9] == 0 &&
        values[10] == 0){
      result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],YesNo(data[row][6]),YesNo(data[row][7]),YesNo(data[row][8]),
                       YesNo(data[row][9]),YesNo(data[row][10]),YesNo(data[row][11]),YesNo(data[row][12]),
                       YesNo(data[row][13]),YesNo(data[row][14]),date_to_dot_date(data[row][15]),row];
      i++;
    }
    //==================================
    else*/ if (employee_check(name,      data[row][0]) &&
        employee_check(phone,            data[row][2]) &&
        employee_check(available,        data[row][14]) &&
        employee_check(living,           data[row][6]) &&
        employee_check(full_time,        data[row][7]) &&
        employee_check(part_time,        data[row][8]) &&
        employee_check(night,            data[row][9]) &&
        employee_check(car,              data[row][10]) &&
        employee_check(drivers_license,  data[row][11]) &&
        employee_check(english,          data[row][12]) &&
        employee_check(zk,               data[row][13])
        ){
        result[i] = [data[row][0],data[row][1],data[row][2],data[row][3],data[row][4],data[row][5],YesNo(data[row][6]),YesNo(data[row][7]),YesNo(data[row][8]),
                     YesNo(data[row][9]),YesNo(data[row][10]),YesNo(data[row][11]),YesNo(data[row][12]),
                     YesNo(data[row][13]),YesNo(data[row][14]),date_to_dot_date(data[row][15]),row];
        i++;
        }
    row++;
    Logger.log(row);
  }
  if (i==1) return ContentService.createTextOutput(JSON.stringify('not found')).setMimeType(ContentService.MimeType.JSON);
  return ContentService.createTextOutput(JSON.stringify(result)).setMimeType(ContentService.MimeType.JSON);
}

function last_ids(){
  var employers_sheet     = get_db().getSheetByName('Employers');
  var employee_sheet      = get_db().getSheetByName('Employees');
  var employers_sheet_lr  = employers_sheet.getLastRow();//id
  var employee_sheet_lr   = employee_sheet.getLastRow();//id
  var result = employers_sheet_lr+";"+employee_sheet_lr;
  return ContentService.createTextOutput(JSON.stringify(result)).setMimeType(ContentService.MimeType.JSON);
}



function add_employee(e){
  var data = e.parameter.params;
  var values = [];
      values = data.split(';');
  var employee = values[0];
  var address = values[1];
  var phone = values[2];
  var age = values[3];
  var in_the_usa = values[4];
  var references = values[5];
  var living = YesNo(values[6]);
  var full_time = YesNo(values[7]);
  var part_time = YesNo(values[8]);
  var night = YesNo(values[9]);
  var car = YesNo(values[10]);
  var driver_lic = YesNo(values[11]);
  var english = YesNo(values[12]);
  var zk = YesNo(values[13]);
  var available = YesNo(values[14]);
  var reg_date = values[15];//mm.dd.yy
  var check_id = values[16];
  var sh = check_id.substring(0,2);
  var id = check_id.substring(2,check_id.length);
  //Logger.log(sh+"/id:"+id);
  var ok = ContentService.createTextOutput(JSON.stringify(check_id)).setMimeType(ContentService.MimeType.JSON);
  var employee_sheet = get_db().getSheetByName('Employees');
  id++;
  if (id<=employee_sheet.getLastRow()){
    //employee_sheet.getRange(id+1,1,1,16).setValues(values);
    for (var i = 0; i<16; i++){
      if (i>5 && i<15){
      employee_sheet.getRange(id,i+1).setValue(YesNo(values[i]));
      }else{
      employee_sheet.getRange(id,i+1).setValue(values[i]);
      }
    }
  }else{
    employee_sheet.appendRow([employee,address,phone,age,in_the_usa,references,living,full_time,part_time,night,car,driver_lic,english,zk,available,reg_date]);
  }
  return ok;
}

function add_employer(e){
  var data = e.parameter.params;
  var values = [];
      values = data.split(';');
  var contact_name = values[0];
  var contact_phone = values[1];
  var name = values[2];
  var address = values[3];
  var phone = values[4];
  var start_year = values[5];//mm/dd/yy
  var remarks = values[6];
  var contact = YesNo(values[7]);
  var living = YesNo(values[8]);
  var full_time = YesNo(values[9]);
  var part_time = YesNo(values[10]);
  var night = YesNo(values[11]);
  var car = YesNo(values[12]);
  var drivers_lic = YesNo(values[13]);
  var english = YesNo(values[14]);
  var zk = YesNo(values[15]);
  var contact_phone_second = values[16];
  var check_id = values[17];
  var sh = check_id.substring(0,2);
  var id = check_id.substring(2,check_id.length);
  var ok = ContentService.createTextOutput(JSON.stringify(check_id)).setMimeType(ContentService.MimeType.JSON);
  var employer_sheet = get_db().getSheetByName('Employers');
  id++;
  if (id<=employer_sheet.getLastRow()){
    //employee_sheet.getRange(id+1,1,1,16).setValues(values);
    employer_sheet.getRange(id,1).setValue(values[0]);
    employer_sheet.getRange(id,2).setValue(values[1]);
    employer_sheet.getRange(id,3).setValue(values[16]);
    for (var i = 4; i<16; i++){
      if (i-2 > 6){
        employer_sheet.getRange(id,i).setValue(YesNo(values[i-2]));
      }else{
        employer_sheet.getRange(id,i).setValue(values[i-2]);
      }
    }
  }else{
    employer_sheet.appendRow([contact_name,contact_phone,contact_phone_second,name,address,phone,start_year,remarks,contact,living,full_time,part_time,night,car,drivers_lic,english,zk]);
  }
  return ok;
}

function get_employer_sheet(){
  return get_db().getSheetByName('Employers');
}

function get_db() {
	//link to sheet, you can copy from url
  var bd = '1QzzwW4aIyYoVSCVzPiykPZoUNopwXPmcmhTOd7Ql-2Q';
  if (SpreadsheetApp.getActiveSpreadsheet().getId() == bd) return SpreadsheetApp.getActiveSpreadsheet();
  return SpreadsheetApp.openById(bd);//bd_myasoet
}